#!/bin/bash

RED="31"
GREEN="32"
BOLDGREEN="\033[1;${GREEN}m"
BOLDRED="\033[1;${RED}m"
ENDCOLOR="\033[0m"

ERRORS=()

# helper functions
progress_message() {
  printf "${BOLDGREEN}%s${ENDCOLOR}\n" "$1"
}

error_message() {
  printf "${BOLDRED}%s${ENDCOLOR}\n" "$1" >&2
}

execute_command() {
  progress_message "$2..."

  if output=$(eval "$1" 2>&1); then
    progress_message "Ok!"
  else
    error_message "Fail!"
    ERRORS+=("> $1\n${output}\n\n")
  fi
}

# Install Xcode Command Line Tools if not already installed
if ! xcode-select -p >/dev/null 2>&1; then
  execute_command "xcode-select --install" \
    "> Open the GUI prompt to install Xcode Command Line Tools"
  error_message "Please finish installing the Xcode Command Line Tools, then re-run this script."
  exit 1
else
  progress_message "> Xcode Command Line Tools already installed"
fi

# Check for Homebrew to be present, install if it's missing
if test ! $(which brew); then
  progress_message "> Installing homebrew..."
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  eval "$(/opt/homebrew/bin/brew shellenv)"
fi

# Install Homebrew packages
execute_command "brew bundle" \
  "> Installing Homebrew packages"

# Setup login shell from homebrew
BREW_PREFIX="$(brew --prefix)"
NEW_SHELL="$BREW_PREFIX/bin/bash"

execute_command \
  "grep -Fxq $NEW_SHELL /etc/shells || echo $NEW_SHELL | sudo tee -a /etc/shells" \
  "> Adding Homebrew bash to /etc/shells"

execute_command \
  "chsh -s $NEW_SHELL" \
  "> Changing login shell to Homebrew bash"

# Check for tmux/tpm to be present, install if it's missing
if [ -d "$HOME/.tmux/plugins/tpm" ]; then
  execute_command "git clone https://github.com/tmux-plugins/tpm ${HOME}/.tmux/plugins/tpm" \
    "> Installing Tmux Package Manager"
fi

if [ ${#ERRORS[@]} -gt 0 ]; then
  printf "\n${BOLDRED}The following errors occurred:${ENDCOLOR}\n"
  printf "%b" "${ERRORS[@]}"
fi
